"""
Django settings for property_scraping project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
# from django_cron import CronJobBase, Schedule

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

#--------------Scheduling the Spider--------------------------
##----------------------------------------------------------------------------------
# import schedule
#import os
# import time
# import threading
# import subprocess
# def run_scrapy_job():
#     # Change to your Django project's root directory    
#     # django_root = "/path/to/your/django/project/root"  # Replace with the actual path
#     # os.chdir(django_root)  

#     # django_path = Path(__file__).resolve().parent.parent.parent.parent
#     django_path = '/home/prerak/PycharmProjects/property_scraping'
#     os.chdir(str(django_path)+"/scraper")  
#     # Run the Scrapy spider using subprocess    
#     subprocess.run(["scrapy", "crawl", "data_collector"])  
# def schedule_scrapy_jobs():
#     # Schedule the job to run twice a day    schedule.every().day.at("08:00").do(run_scrapy_job)  # Adjust the time as needed
#     schedule.every().day.at("01:39").do(run_scrapy_job)  # Adjust the time as needed
# # Start the scheduler in a separate thread
# def start_scheduler():
#     while True:        
#         schedule.run_pending()
#         time.sleep(1)
# # Start the scheduler when Django is ready
# from django.apps import AppConfig
# class YourAppConfig(AppConfig):
#     default_auto_field = 'django.db.models.BigAutoField'    
#     name = 'properties'
#     def ready(self):
#         schedule_scrapy_jobs()        
#         threading.Thread(target=start_scheduler).start()

#--------------------------------------------------------------------------------

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n=rsq^n7))&z4m*r&ox3_j=_7+(p0_8^lz6^*=)(@ar64jo2gh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'properties', # Django App needs to be registered here.
    # 'django_cron', # For Cron Jobs.
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'property_scraping.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'property_scraping.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',  # Chnaged the Engine to djongo for storing data in MongoDb.
        'NAME': 'property_details',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# CRON_CLASSES = ['properties.cronjobs.RunScrapySpiderMorning',
# ]